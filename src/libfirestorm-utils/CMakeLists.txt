# TODO: https://rix0r.nl/blog/2015/08/13/cmake-guide/
project(libfirestorm-utils VERSION 0.1 LANGUAGES C CXX)

# Disable clang diagnostic pragma unknown in GCC warning.
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas")

# Define library. Only source files here!
set(SOURCE_FILES
        src/exception.cpp)

set(HEADER_FILES
        include/firestorm/utils/exception.h include/firestorm/utils/time_conversion.h)

# Define an executable
add_library(libfirestorm-utils
        ${SOURCE_FILES}
        ${HEADER_FILES})

# Define headers for this library. PUBLIC headers are used for
# compiling the library, and will be added to consumers' build
# paths.
target_include_directories(libfirestorm-utils PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:include>
        PRIVATE src)

# Define the libraries this project depends upon
#target_link_libraries(libfirestorm-utils
#        libfirestorm-logging)

# Required compiler features
# see https://cmake.org/cmake/help/v3.1/manual/cmake-compile-features.7.html
#target_compile_features(libfirestorm-utils
#        PUBLIC cxx_constexpr cxx_auto_type cxx_final cxx_override cxx_nullptr cxx_user_literals
#        PRIVATE cxx_alignas)

# Link-Time Optimization
check_ipo_supported(RESULT result)
if(result AND FSTM_ENABLE_LTO)
    set_property(TARGET libfirestorm-utils PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
endif()
